根据Linux实现系统调用的实现，我们实现自己的系统调用。
系统调用分为两部分：
    1.暴露给用户进程的接口函数如c库函数，属于用户空间。3特权级
    2.该系统功能对应的内核具体实现，属于内核空间。0特权级

通常用户程序运行在用户态(3特权级)，其想使用内核提供的功能，需要进入内核，使CPU处于0特权级执行内核态下的功能函数。
Linux通过int 0x80软中断实现，发生该中断时，查找0x80中断号对应的中断门描述符，

                                80386 INTERRUPT GATE
   31                23                15                7                0
  +-----------------+-----------------+---+---+---------+-----+-----------+
  |           OFFSET 31..16           | P |DPL|0 1 1 1 0|0 0 0|(NOT USED) |4
  |-----------------------------------+---+---+---------+-----+-----------|
  |             SELECTOR              |           OFFSET 15..0            |0
  +-----------------+-----------------+-----------------+-----------------+

对于中断描述符：
OFFSET存放中断处理函数的偏移地址，即形如intr_xx_handler(void) 函数的偏移地址
SELECTOR 为该中断函数所在段的段选择子，该选择子对应GDT表中某个GDT描述符，通过该选择子
在GDT对应表项得到中断处理函数的段基址SEGMENT BASE ，由于中断处理函数属于内核代码段
即对应GDT第1项 则SEGMENT SELECTOR 中INDEX为1，同时，在用户态下执行int 0x80指令CPU的CPL处于3
特权级，为了能够访问上述中断门描述符，则中断门描述符的DPL应设置为3。
    SEGMENT SELECTOR     
 +-----------------------+-+---+
 |         INDEX         | |RPL|
 +-----------------------+-+---+  

 实现过程：用户程序执行int 0x80中断指令，查找IDT表对应0x80的描述符，获取中断处理程序的偏移地址，同时获取到
 中断描述符中的SELECTOR并在GDT表中获取该中断处理程序的基址，两者拼接得到最终线性地址。CPU得以执行中断处理
 程序，执行完成后，再通过中断返回返回到用户态。

Linux系统调用实现思路：
    1.使用中断门实现系统调用
    2.在IDT表中安装0x80对应的中断描述符，在该描述符中注册系统调用的中断处理程序
    3.建立系统调用子功能表syscall_table 利用eax作为子功能号，在该表中调用具体的系统功能子函数
    4.使用宏实现用户空间系统调用的接口_syscall 
    5.中断返回intr_exit

实现系统调用：
    1.添加0x80中断描述符 idt[0x80] DPL3,syscall_handler
    2.实现系统调用用户接口 _syscall ,我们这里实现获取进程pid的系统调用getpid，该系统调用无参数。
        我们在syscal.c中实现0-3个参数的系统调用接口函数 _syscall，参数分别被放在ebx ecx edx中，
        子功能号和系统调用返回值在eax中。
    3.增加0x80号中断处理函数 interrupt.c中extern uint32_t syscall_handler()，在kernel.s实现该函数
    4.初始化系统调用(系统调用接口函数、初始化系统调用表)
    5.添加系统调用getpid
        总结系统调用步骤:
            1.在syscall.h的enum SYSCALL_NR添加子功能号
            2.在syscall.c添加用户接口
            3.在syscall-init.c定义子功能处理函数并在syscall_table注册



                           DATA SEGMENT DESCRIPTOR

  31                23                15                7               0
 +-----------------+-+-+-+-+---------+-+-----+---------+-----------------+
 |#################|#|#|#|A| LIMIT   |#|     |  TYPE   |#################|
 |###BASE 31..24###|G|B|0|V| 19..16  |P| DPL |         |###BASE 23..16###| 4
 |#################|#|#|#|L|         |#|     |1|0|E|W|A|#################|
 |-----------------+-+-+-+-+---------+-+-----+-+-+-+-+-+-----------------|
 |###################################|                                   |
 |########SEGMENT BASE 15..0#########|        SEGMENT LIMIT 15..0        | 0
 |###################################|                                   |
 +-----------------+-----------------+-----------------+-----------------+

                        EXECUTABLE SEGMENT DESCRIPTOR

  31                23                15                7               0
 +-----------------+-+-+-+-+---------+-+-----+---------+-----------------+
 |#################|#|#|#|A| LIMIT   |#|     |  TYPE   |#################|
 |###BASE 31..24###|G|D|0|V| 19..16  |P| DPL |         |###BASE 23..16###| 4
 |#################|#|#|#|L|         |#|     |1|1|C|R|A|#################|
 |-----------------+-+-+-+-+---------+-+-----+-+-+-+-+-+-----------------|
 |###################################|                                   |
 |########SEGMENT BASE 15..0#########|        SEGMENT LIMIT 15..0        | 0
 |###################################|                                   |
 +-----------------+-----------------+-----------------+-----------------+

                         SYSTEM SEGMENT DESCRIPTOR

  31                23                15                7               0
 +-----------------+-+-+-+-+---------+-+-----+-+-------+-----------------+
 |#################|#|#|#|A| LIMIT   |#|     | |       |#################|
 |###BASE 31..24###|G|X|0|V| 19..16  |P| DPL |0| TYPE  |###BASE 23..16###| 4
 |#################|#|#|#|L|         |#|     | |       |#################|
 |-----------------+-+-+-+-+---------+-+-----+-+-------+-----------------|
 |###################################|                                   |
 |########SEGMENT BASE 15..0#########|       SEGMENT LIMIT 15..0         | 0
 |###################################|                                   |
 +-----------------+-----------------+-----------------+-----------------+


